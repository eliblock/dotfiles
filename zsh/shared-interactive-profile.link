## Sourced by _both_ ~/.zshrc and ~/.bash_profile
## Store cross-shell aliases + helpers here

# uuidgen, but for version-4 (lowercase) uuids
alias uuidgen4='python3 -c "import uuid; print(uuid.uuid4())"'

alias hello='echo "hi! ðŸ‘‹"'

# ##########
# # ssh
# ##########
eval $(ssh-agent) 1> /dev/null

##########
# python
##########
function virtual_env_activate() {
  # check the current folder belong to earlier VIRTUAL_ENV folder, potentially deactivate.
  if [[ -n "$VIRTUAL_ENV" ]]; then
    parentdir="$(dirname "$VIRTUAL_ENV")"
    if [[ "$PWD"/ != "$parentdir"/* ]]; then
      deactivate
    fi
  fi

  # if .python-version is found, create/show .venv
  if [ -f .python-version ] && [ ! -d ./.venv ]; then
    uv venv
  fi

  # if .venv is found and not activated, activate it
  if [[ -z "$VIRTUAL_ENV" ]]; then
    # if .venv folder is found then activate the vitualenv
    if [ -d ./.venv ] && [ -f ./.venv/bin/activate ]; then
      source ./.venv/bin/activate
    fi
  fi
}


##########
# nvm
##########
NVM_DIR="$HOME/.nvm"
if [ -x /opt/homebrew/bin/brew ]; then # apple silicon
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
elif [ -x /usr/local/bin/brew ]; then # intel
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"
fi
export NVM_DIR
